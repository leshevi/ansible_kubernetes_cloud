---
- name: Configure Kubernetes Master
  hosts: kuber
  become: true
  tasks:
    - name: Update apt
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600

    - name: Install required packages
      ansible.builtin.apt:
        name:
          - sudo
          - net-tools
          - tcpdump
          - vim
          - ncdu
          - htop
          - openssl
          - wget
          - tree
          - pip
          - rsync
          - ufw
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        state: present
        update_cache: true

    - name: Install Docker
      ansible.builtin.apt:
        name: docker.io
        state: present
        update_cache: true

    - name: Remove Keyrings Directory (if it exists)
      ansible.builtin.command: rm -rf /etc/apt/keyrings
      changed_when: false

    - name: Remove Existing Kubernetes Directory (if it exists)
      ansible.builtin.command: sudo rm -rf /etc/apt/sources.list.d/pkgs_k8s_io_core_stable_v1_30_deb.list
      changed_when: false

    - name: Disable swap
      changed_when: false
      ansible.builtin.command:
        cmd: swapoff -a

    - name: Disable SWAP in fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        line: '# \1'
        backrefs: true

    - name: Add kernel modules for Containerd
      ansible.builtin.copy:
        dest: /etc/modules-load.d/containerd.conf
        mode: "0644"
        content: |
          overlay
          br_netfilter

    - name: Load kernel modules for Containerd
      changed_when: false
      become: true
      ansible.builtin.command:
        cmd: modprobe overlay && modprobe br_netfilter

    - name: Add kernel parameters for Kubernetes
      ansible.builtin.copy:
        dest: /etc/sysctl.d/kubernetes.conf
        mode: "0644"
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1

    - name: Load kernel parameter changes
      changed_when: false
      ansible.builtin.command:
        cmd: sudo sysctl --system

    - name: Prepare containerd directory and update permissions
      ansible.builtin.file:
        path: /opt/containerd
        state: directory
        mode: '0755'

    - name: Configuring Containerd (building the configuration file)
      changed_when: false
      ansible.builtin.command:
        cmd: sudo sh -c "containerd config default > /opt/containerd/config.toml"

    - name: Configuring Containerd (Setting SystemdCgroup Variable to True)
      changed_when: false
      ansible.builtin.command:
        cmd: sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /opt/containerd/config.toml

    - name: Reload systemd configuration
      ansible.builtin.systemd_service:
        state: restarted
        daemon_reload: true
        name: containerd

    - name: Restart containerd service
      ansible.builtin.service:
        name: containerd
        state: restarted

    - name: Allow 6443/tcp through firewall
      community.general.ufw:
        rule: allow
        port: '6443'
        proto: tcp

    - name: Allow 2379:2380/tcp through firewall
      community.general.ufw:
        rule: allow
        port: '2379:2388'
        proto: tcp

    - name: Allow 22/tcp through firewall
      community.general.ufw:
        rule: allow
        port: '22'
        proto: tcp

    - name: Allow 8080/tcp through firewall
      community.general.ufw:
        rule: allow
        port: '8080'
        proto: tcp

    - name: Allow 10250/tcp through firewall
      community.general.ufw:
        rule: allow
        port: '10250'
        proto: tcp

    - name: Allow 10251/tcp through firewall
      community.general.ufw:
        rule: allow
        port: '10251'
        proto: tcp

    - name: Allow 10252/tcp through firewall
      community.general.ufw:
        rule: allow
        port: '10252'
        proto: tcp

    - name: Allow 10255/tcp through firewall
      community.general.ufw:
        rule: allow
        port: '10255'
        proto: tcp

    - name: Allow 5473/tcp through firewall
      community.general.ufw:
        rule: allow
        port: '5473'
        proto: tcp

    - name: Enable the firewall
      community.general.ufw:
        state: enabled

    - name: Reload the firewall
      changed_when: false
      ansible.builtin.command:
        cmd: sudo ufw reload

    - name: Prepare keyrings directory and update permissions
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        owner: ansible
        mode: "0777"

    - name: Download Kubernetes GPG key securely
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
        keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        state: present

    - name: Add Kubernetes repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /"
        state: present

    - name: Install kubeadm, kubelet, kubectl
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: true

    - name: Hold kubelet, kubeadm, kubectl packages
      changed_when: false
      ansible.builtin.command:
        cmd: sudo apt-mark hold kubelet kubeadm kubectl

    - name: Replace /etc/default/kubelet contents
      ansible.builtin.copy:
        dest: /etc/default/kubelet
        content: 'KUBELET_EXTRA_ARGS="--cgroup-driver=cgroupfs"'
        mode: "0644"

    - name: Reload systemd configuration
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: Restart kubelet service
      ansible.builtin.service:
        name: kubelet
        state: restarted

    - name: Update System-Wide Profile for Kubernetes
      ansible.builtin.copy:
        dest: /etc/profile.d/kubernetes.sh
        mode: "0644"
        content: |
          export KUBECONFIG=/etc/kubernetes/admin.conf
          export ANSIBLE_USER="ansible"

    - name: Reboot the system
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible for Kubernetes setup"
        reboot_timeout: 150

- name: Configure master
  hosts: managers
  become: true
  gather_facts: true
  tasks:
    - name: Replace Docker daemon.json configuration
      ansible.builtin.copy:
        dest: /etc/docker/daemon.json
        mode: "0644"
        content: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"],
            "log-driver": "json-file",
            "log-opts": {
                         "max-size": "100m"
                        },
            "storage-driver": "overlay2"
          }

    - name: Reload systemd configuration
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: Restart Docker service
      ansible.builtin.service:
        name: docker
        state: restarted

    - name: Update Kubeadm Environment Variable
      changed_when: false
      ansible.builtin.command:
        cmd: sudo sed -i -e '/^\[Service\]/a Environment="KUBELET_EXTRA_ARGS=--fail-swap-on=false"' /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf

    - name: Reload systemd configuration
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: Restart kubelet service
      ansible.builtin.service:
        name: kubelet
        state: restarted

    - name: Pull kubeadm container images
      changed_when: false
      ansible.builtin.command:
        cmd: sudo kubeadm config images pull

    - name: Initialize Kubernetes control plane
      ansible.builtin.shell: kubeadm init --pod-network-cidr=10.244.0.0/16 >> /tmp/kubeadm_init.txt
      args:
        creates: /tmp/kubeadm_init.txt
      become: true
      changed_when: false

    - name: Set permissions for Kubernetes Admin
      ansible.builtin.file:
        path: /etc/kubernetes/admin.conf
        state: file
        mode: '0765'

- name: Configure Kubernetes Network
  hosts: managers
  become: true
  tasks:
    - name: Install Flannel network plugin
      ansible.builtin.shell: su - $ANSIBLE_USER -c "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
      changed_when: false

    - name: Taint master node to prevent workload scheduling
      ansible.builtin.shell: su - $ANSIBLE_USER -c "kubectl taint nodes --all node-role.kubernetes.io/control-plane-"
      changed_when: false

    - name: Change a str
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^      bin_dir = "/usr/lib/cni"'
        line: '      bin_dir = "/opt/cni/bin"'
        owner: root
        group: root

    - name: Restart containerd service
      ansible.builtin.service:
        name: containerd
        state: restarted
